def IDFS(graph, start, goal):
    for depth in range(100):
        print(f"\nDepth {depth}:")
        result = DLS(graph, start, goal, depth)
        if result != 'LIMIT':
            return result

graph={
    'A':['B','C'],
    'B':['D','E'],
    'C':['F'],
    'D':['G','H'],
    'E':[],
    'F':['I','K'],
    'G':[],
    'H':['L'],
    'I':[],
    'K':['M'],
    'L':[],
    'M':[]
}
# graph = {0: [1, 2], another example if want 
#          1: [3, 4],
#          2: [5],
#          3: [6, 7],
#          4: [],
#          5: [8, 10],
#          6: [],
#          7: [11],
#          8: [],
#          10: [12],
#          11: [],
#          12: []}

start_node = input("Enter the start node: ")
goal_node = input("Enter the goal node: ")

result = IDFS(graph, start_node, goal_node)

if result == "GOAL":
    print("\nGoal node found.")
else:
    print("\nGoal node not found.")
